<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="1" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="DemoSuite" duration-ms="3028" started-at="2017-04-18T09:22:47Z" finished-at="2017-04-18T09:22:50Z">
    <groups>
      <group name="Regression">
        <method signature="BannerTest.PostBannerTest()[pri:0, instance:banner.BannerTest@58651fd0]" name="PostBannerTest" class="banner.BannerTest"/>
      </group> <!-- Regression -->
      <group name="Smoke">
        <method signature="BannerTest.PostBannerTest()[pri:0, instance:banner.BannerTest@58651fd0]" name="PostBannerTest" class="banner.BannerTest"/>
        <method signature="HotNewTest.GetHotNewTest()[pri:0, instance:hotnew.HotNewTest@4520ebad]" name="GetHotNewTest" class="hotnew.HotNewTest"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="FirstAPITaskManagerTest" duration-ms="3028" started-at="2017-04-18T09:22:47Z" finished-at="2017-04-18T09:22:50Z">
      <class name="hotnew.HotNewTest">
        <test-method status="PASS" signature="GetHotNewTest()[pri:0, instance:hotnew.HotNewTest@4520ebad]" name="GetHotNewTest" duration-ms="590" started-at="2017-04-18T14:52:50Z" finished-at="2017-04-18T14:52:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetHotNewTest -->
      </class> <!-- hotnew.HotNewTest -->
      <class name="banner.BannerTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:banner.BannerTest@58651fd0]" name="beforeSuite" is-config="true" duration-ms="8" started-at="2017-04-18T14:52:47Z" finished-at="2017-04-18T14:52:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="FAIL" signature="PostBannerTest()[pri:0, instance:banner.BannerTest@58651fd0]" name="PostBannerTest" duration-ms="2411" started-at="2017-04-18T14:52:47Z" finished-at="2017-04-18T14:52:50Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
	at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:88)
	at io.restassured.internal.ValidatableResponseOptionsImpl.specification(ValidatableResponseOptionsImpl.java:311)
	at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:292)
	at api.banner.PostBannerValidateResponseTask.perform(PostBannerValidateResponseTask.java:20)
	at task.TaskManager.execute(TaskManager.java:30)
	at api.banner.PostBannerTaskManager.perform(PostBannerTaskManager.java:32)
	at banner.BannerTest.PostBannerTest(BannerTest.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostBannerTest -->
      </class> <!-- banner.BannerTest -->
    </test> <!-- FirstAPITaskManagerTest -->
  </suite> <!-- DemoSuite -->
</testng-results>
